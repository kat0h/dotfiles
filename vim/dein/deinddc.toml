[[plugins]]
repo = 'Shougo/ddc.vim'
hook_add = '''
call ddc#custom#patch_global({
      \ 'backspaceCompletion': v:true,
      \ })

" ソース・マッチャー・ソーターを追加
call ddc#custom#patch_global('sources', [
      \ 'vim-lsp',
      \ 'file',
      \ 'around',
      \ ])


call ddc#custom#patch_global('sourceOptions', {
  \   '_': {
  \     'matchers': ['matcher_fuzzy'],
  \     'sorters': ['sorter_fuzzy'],
  \     'ignoreCase': v:true,
  \   }
  \ })
  "\     'converters': ['converter_fuzzy'],

call ddc#custom#patch_global('sourceOptions', {
      \ '_': {
      \   'forceCompletionPattern': '\.',
      \ },
      \ })

call ddc#custom#patch_global('sourceOptions', {
      \ '_': {
      \   'minAutoCompleteLength': 1,
      \ },
      \ })

call ddc#custom#patch_global('sourceOptions', {
      \ 'vim-lsp': {
      \   'matchers': ['matcher_head'],
      \   'mark': ' ',
      \   'dup': v:true,
      \ },
      \ })

call ddc#custom#patch_global('sourceOptions', {
      \ 'file': {
      \   'mark': ' ',
      \   'isVolatile': v:true,
      \   'minAutoCompleteLength': 1000,
      \   'forceCompletionPattern': '\S/\S*'
      \ },
      \})

call ddc#custom#patch_global('sourceOptions', {
      \ 'around': {'mark': ' '},
      \ })

" <Tab>で順繰り
inoremap <silent><expr> <TAB>
\ pumvisible() ? '<C-n>' :
\ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s') ?
\ '<TAB>' : ddc#map#manual_complete()
inoremap <expr><S-TAB>  pumvisible() ? '<C-p>' : '<C-h>'

inoremap <expr><cr> pumvisible() ? '<c-y>' : '<cr>'

" 有効化
call ddc#enable()
'''

[[plugins]]
repo = 'shun/ddc-vim-lsp'

[[plugins]]
repo = 'Shougo/ddc-around'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'

[[plugins]]
repo = 'LumaKernel/ddc-file'

[[plugins]]
repo = 'tani/ddc-fuzzy'
