#radiru
[[plugins]]
repo = 'kat0h/radiru.vim'
#git
[[plugins]]
repo = 'lambdalisue/gina.vim'
hook_add = 'cabbrev git Gina'
#runner
[[plugins]]
repo = 'thinca/vim-quickrun'
#delete buffer
[[plugins]]
repo = 'mhinz/vim-sayonara'
[[plugins]]
repo = 'rhysd/clever-f.vim'
hook_add = '''
map ; <Plug>(clever-f-repeat-forward)
map , <Plug>(clever-f-repeat-back)
'''
[[plugins]]
repo = 'skanehira/translate.vim'
hook_add = '''
nnoremap <leader>t :Translate<CR>
vnoremap <leader>t :Translate<CR>
'''
[[plugins]]
repo = 'bronson/vim-trailing-whitespace'
[[plugins]]
repo = 'tyru/open-browser.vim'
[[plugins]]
repo = 'vim-jp/vimdoc-ja'
merged = 0
hook_add = '''
set helplang=ja,en
augroup VimrcHelp
  autocmd!
  autocmd FileType help nnoremap <buffer><Return> <C-]>
  autocmd FileType help nnoremap <buffer><BS> <C-o>
  autocmd FileType help nnoremap <buffer>q <C-w>q
augroup END
'''
[[plugins]]
repo = 'leafgarland/typescript-vim'
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
set laststatus=2
set noshowmode
function! LightlineSkkGetMode() abort
  let l:mode = skkeleton#mode()
  if l:mode == ''
    return 'Aa'
  elseif l:mode == 'hira'
    return 'あ'
  elseif l:mode == 'kata'
    return 'ア'
  endif
endfunction
let g:lightline = {
\  'active': {
\    'left': [['mode', 'paste'], ['readonly', 'modified', 'filename'], ['skk' ,'radiru']],
\    'right': [['scroll'], ['fileencoding', 'filetype']],
\  },
\
\  'inactive': {
\    'left': [['filename']],
\    'right': [['filetype']],
\  },
\  'colorscheme': 'one',
\  'component_function': {
\    'radiru': 'radiru#playing_station',
\    'skk': 'LightlineSkkGetMode',
\    'lfilename': 'LightlineFilename'
\  },
\}
'''
[[plugins]]
repo = 'tyru/caw.vim'
[[plugins]]
repo = 'machakann/vim-sandwich'
[[plugins]]
repo = 'pangloss/vim-javascript'
[[plugins]]
repo = 'jiangmiao/auto-pairs'
# ==============================================================================
# Filetype
# TOML
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'
# HTML
[[plugins]]
repo = 'mattn/emmet-vim'
hook_add = '''
let g:user_emmet_leader_key='<c-x>'
'''
# ==============================================================================
# Fern.vim
[[plugins]]
repo = 'lambdalisue/fern.vim'
hook_add = '''
let g:fern#disable_viewer_spinner = 1
augroup VimrcFern
  autocmd!
  " autocmd FileType fern setlocal nocursorline
  autocmd FileType fern setlocal nonumber
  autocmd FileType fern call s:fern_settings()
augroup END
function! s:fern_settings() abort
  nmap <silent> <buffer> p     <Plug>(fern-action-preview:toggle)
  nmap <silent> <buffer> <C-p> <Plug>(fern-action-preview:auto:toggle)
  nmap <silent><expr> <buffer> <C-d> fern_preview#is_win_visible()?"<Plug>(fern-action-preview:scroll:down:half)":"<C-d>"
  nmap <silent><expr> <buffer> <C-u> fern_preview#is_win_visible()?"<Plug>(fern-action-preview:scroll:up:half)":"<C-u>"
endfunction
nnoremap <silent><leader>f :Fern . -drawer -toggle<CR>
'''
[[plugins]]
repo = 'kat0h/fern-preview.vim'
[[plugins]]
repo = 'lambdalisue/fern-renderer-nerdfont.vim'
hook_add = '''
let g:fern#renderer = "nerdfont"
let g:fern#renderer#nerdfont#padding = "  "
augroup my-glyph-palette
  autocmd! *
  autocmd FileType fern call glyph_palette#apply()
augroup END
'''
[[plugins]]
repo = 'lambdalisue/nerdfont.vim'
[[plugins]]
repo = 'lambdalisue/glyph-palette.vim'
# ==============================================================================
# denops.vim
[[plugins]]
repo = 'vim-denops/denops.vim'
hook_add = '''
let g:denops#debug = 0
let g:denops#type_check = 0
'''
[[plugins]]
repo = 'vim-skk/skkeleton'
hook_add = '''
if !filereadable(expand('~/.config/skk/SKK-JISYO.L'))
  call mkdir(expand('~/.config/skk'), 'p')
  call system('cd ~/.config/skk && wget http://openlab.jp/skk/dic/SKK-JISYO.L.gz && gzip -d SKK-JISYO.L.gz')
endif
imap <C-j> <Plug>(skkeleton-toggle)
cmap <C-j> <Plug>(skkeleton-toggle)
function! s:skkeleton_init() abort
  call skkeleton#config({
        \ "globalJisyo": expand("~/.config/skk/SKK-JISYO.L"),
        \ "markerHenkan": "✋",
        \ "markerHenkanSelect": "✊"
        \})
endfunction
autocmd User skkeleton-initialize-pre call s:skkeleton_init()
'''
[[plugins]]
repo = 'gamoutatsumi/dps-ghosttext.vim'
# [[plugins]]
# repo = 'kat0h/bufpreview.vim'
# hook_add = '''
# let g:bufpreview#debug = v:true
# '''
