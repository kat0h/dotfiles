# ==============================================================================
# Others
[[plugins]]
repo = 'kat0h/radiru.vim'

[[plugins]]
repo = 'lambdalisue/gina.vim'
hook_add = 'cabbrev git Gina'

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'mhinz/vim-sayonara'

[[plugins]]
repo = 'rhysd/clever-f.vim'
hook_add = '''
map ; <Plug>(clever-f-repeat-forward)
map , <Plug>(clever-f-repeat-back)
'''

[[plugins]]
repo = 'skanehira/translate.vim'
hook_add = '''
nnoremap <leader>t :Translate<CR>
vnoremap <leader>t :Translate<CR>
'''


# ==============================================================================
# Fern.vim

[[plugins]]
repo = 'lambdalisue/fern.vim'
hook_add = '''
let g:fern#disable_viewer_spinner = 1
augroup VimrcFern
  autocmd!
  " autocmd FileType fern setlocal nocursorline
  autocmd FileType fern setlocal nonumber
  autocmd FileType fern call s:fern_settings()
augroup END
function! s:fern_settings() abort
  nmap <silent> <buffer> p     <Plug>(fern-action-preview:toggle)
  nmap <silent> <buffer> <C-p> <Plug>(fern-action-preview:auto:toggle)
  nmap <silent><expr> <buffer> <C-d> fern_preview#is_win_visible()?"<Plug>(fern-action-preview:scroll:down:half)":"<C-d>"
  nmap <silent><expr> <buffer> <C-u> fern_preview#is_win_visible()?"<Plug>(fern-action-preview:scroll:up:half)":"<C-u>"
endfunction
nnoremap <silent><leader>f :Fern . -drawer -toggle<CR>
'''

[[plugins]]
repo = 'kat0h/fern-preview.vim'

[[plugins]]
repo = 'lambdalisue/fern-renderer-nerdfont.vim'
hook_add = '''
let g:fern#renderer = "nerdfont"
let g:fern#renderer#nerdfont#padding = "  "
augroup my-glyph-palette
  autocmd! *
  autocmd FileType fern call glyph_palette#apply()
augroup END
'''

[[plugins]]
repo = 'lambdalisue/nerdfont.vim'

[[plugins]]
repo = 'lambdalisue/glyph-palette.vim'

# ==============================================================================
# denops.vim
[[plugins]]
repo = 'vim-denops/denops.vim'
hook_add = '''
let g:denops#debug = 0
let g:denops#type_check = 0
'''

[[plugins]]
repo = 'vim-skk/skkeleton'
hook_add = '''
if !filereadable(expand('~/.config/skk/SKK-JISYO.L'))
  call mkdir(expand('~/.config/skk'), 'p')
  call system('cd ~/.config/skk && wget http://openlab.jp/skk/dic/SKK-JISYO.L.gz && gzip -d SKK-JISYO.L.gz')
endif

imap <C-j> <Plug>(skkeleton-toggle)
cmap <C-j> <Plug>(skkeleton-toggle)

function! s:skkeleton_init() abort
  call skkeleton#config({
        \ "globalJisyo": expand("~/.config/skk/SKK-JISYO.L"),
        \ "markerHenkan": "✋",
        \ "markerHenkanSelect": "✊"
        \})
endfunction
autocmd User skkeleton-initialize-pre call s:skkeleton_init()
'''

[[plugins]]
repo = 'gamoutatsumi/dps-ghosttext.vim'

[[plugins]]
repo = 'kat0h/bufpreview.vim'
# repo = '~/dev/kato-k/dps-mdpreview'
hook_add = '''
'''
