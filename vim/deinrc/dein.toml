# 行頭行末にあるスペースを可視化
[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

# gcでコメントの切り替えができる
[[plugins]]
repo = 'tpope/vim-commentary'
# . の強化
[[plugins]]
repo = 'tpope/vim-repeat'
# S で括弧の追加等ができる
[[plugins]]
repo = 'tpope/vim-surround'

# 括弧の補完
[[plugins]]
repo = 'cohama/lexima.vim'

# 日本語ドキュメント
[[plugins]]
repo = 'vim-jp/vimdoc-ja'
hook_add='''
set helplang=ja,en
'''

# LSP
[[plugins]]
repo = 'neoclide/coc.nvim'

[[plugins]]
repo = 'hrsh7th/vim-vsnip'
hook_add = '''
imap <expr> <Tab>   vsnip#available(1)  ? '<Plug>(vsnip-expand-or-jump)' : '<Tab>'
smap <expr> <Tab>   vsnip#available(1)  ? '<Plug>(vsnip-expand-or-jump)' : '<Tab>'
imap <expr> <S-Tab> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)'      : '<S-Tab>'
smap <expr> <S-Tab> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)'      : '<S-Tab>'
'''

[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'

[[plugins]]
repo = 'mattn/vim-lsp-icons'

[[plugins]]
repo = 'tsuyoshicho/vim-efm-langserver-settings'
depends = ['vim-lsp']

[[plugins]]
repo = 'itchyny/vim-parenmatch'
hook_add = '''
let g:loaded_matchparen = 1
'''

[[plugins]]
repo = 'luochen1990/rainbow'
hook_add = '''
let g:rainbow_active = 0
'''

[[plugins]]
repo = 'haya14busa/is.vim'

[[plugins]]
repo = 'haya14busa/dein-command.vim'

#ColorScheme
[[plugins]]
repo = 'sainnhe/forest-night'
hook_add='''
let g:forest_night_disable_italic_comment = 1
'''

[[plugins]]
repo = 'cocopon/iceberg.vim'

[[plugins]]
repo = 'ghifarit53/tokyonight-vim'
hook_add = '''
let g:tokyonight_enable_italic = 0
'''

[[plugins]]
repo = 'joshdick/onedark.vim'

# LightLine
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
"function L_eskk_get_mode()
"    if (mode() == 'i') && eskk#is_enabled()
"        return g:eskk#statusline_mode_strings[eskk#get_mode()]
"    else
"        return ''
"    endif
"endfunction
"
"let g:lightline = {
"\   'active': {
"\     'left': [ ['mode', 'paste'], ['readonly', 'filename', 'eskk', 'modified'], ['radiru'] ]
"\   },
"\   'component_function': {
"\     'radiru': 'radiru#playing_station',
"\     'eskk': 'L_eskk_get_mode'
"\   },
"\ }
'''

[[plugins]]
repo = 'mbbill/undotree'
hook_add = '''
nnoremap <leader>u :<C-u>UndotreeToggle<cr>
'''

[[plugins]]
repo = 'easymotion/vim-easymotion'

[[plugins]]
repo = 'kato-k/vim-auto-color-switcher'
hook_post_update = '''
let g:dein#plugin.build = 'make'
'''
hook_add = '''
let g:auto_color_switcher#command={
    \ 'light': 'colorscheme xcodelight',
    \ 'dark' : 'colorscheme onedark'
    \}
colorscheme onedark
'''

[[plugins]]
repo = 'arcticicestudio/nord-vim'

[[plugins]]
repo = 'arzg/vim-colors-xcode'

[[plugins]]
repo = 'thinca/vim-scouter'

[[plugins]]
repo = 'skanehira/gh.vim'

[[plugins]]
repo = 'kato-k/radiru.vim'

[[plugins]]
repo = 'liuchengxu/vista.vim'
hook_add = '''
nnoremap <silent> <Leader>o :<C-u>Vista!!<CR>
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
let g:quickrun_config = get(g:, 'quickrun_config', {})
let g:quickrun_config._ = {
      \ 'outputter' : 'error',
      \ 'outputter/error/success' : 'buffer',
      \ 'outputter/error/error'   : 'quickfix',
      \ 'outputter/buffer/close_on_empty' : 1,
      \ 'runner' : 'terminal',
      \ }
'''

[[plugins]]
repo = 'tyru/eskk.vim'
hook_add = '''
if !filereadable(expand('~/.config/eskk/jisyo'))
    call system('mkdir -p ~/.config/eskk')
    call system('cd ~/.config/eskk/ && wget http://openlab.jp/skk/dic/SKK-JISYO.L.gz && gzip -d SKK-JISYO.L.gz && nkf -Ew SKK-JISYO.L > jisyo && rm -f SKK-JISYO.L')
endif
let g:eskk#directory = "~/.config/eskk"
let g:eskk#dictionary = { 'path': "~/.config/eskk/my_jisyo", 'sorted': 1, 'encoding': 'utf-8',}
let g:eskk#large_dictionary = {'path': "~/.config/eskk/jisyo", 'sorted': 1, 'encoding': 'utf-8',}
'''

[[plugins]]
repo = 'kato-k/vim-sl'

[[plugins]]
repo = 'kjssad/quantum.vim'

[[plugins]]
repo = 'pineapplegiant/spaceduck'
hook_add = '''
colorscheme spaceduck
'''

[[plugins]]
repo = 'kato-k/vim-colorscheme-settings'
hook_add = '''
let g:colorschemes_settings#use_default_colorschemes = v:false
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-file.vim'
hook_add = '''
au User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#file#get_source_options({
    \ 'name': 'file',
    \ 'allowlist': ['*'],
    \ 'priority': 10,
    \ 'completor': function('asyncomplete#sources#file#completor')
    \ }))
'''

[[plugins]]
repo = 'mattn/ctrlp-matchfuzzy'

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
hook_add = '''
let g:ctrlp_match_func = {'match': 'ctrlp_matchfuzzy#matcher'}
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git'
'''

[[plugins]]
repo = 'lambdalisue/fern.vim'
hook_add = '''
nnoremap <leader>f :Fern . -drawer -toggle<CR>
'''

[[plugins]]
repo = 'lambdalisue/fern-hijack.vim'

[[plugins]]
repo = 'lambdalisue/fern-git-status.vim'

[[plugins]]
repo = '~/dev/vim-plugins/artify.vim9'

[[plugins]]
repo = 'sainnhe/artify.vim'

[[plugins]]
repo = '~/dev/vim-plugins/nyanko.vim'
