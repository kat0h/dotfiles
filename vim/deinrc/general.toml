[[plugins]]
repo = 'vim-denops/denops.vim'

# 行頭行末にあるスペースを可視化
[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

# gcでコメントの切り替えができる
[[plugins]]
repo = 'tpope/vim-commentary'

# S で括弧の追加等ができる
[[plugins]]
repo = 'tpope/vim-surround'

# . の強化
[[plugins]]
repo = 'tpope/vim-repeat'

# 日本語ドキュメント
[[plugins]]
repo = 'vim-jp/vimdoc-ja'
hook_add='''
set helplang=ja,en
'''

[[plugins]]
repo = 'itchyny/vim-parenmatch'
hook_add = '''
let g:loaded_matchparen = 1
'''

[[plugins]]
repo = 'luochen1990/rainbow'
hook_add = '''
let g:rainbow_active = 0
'''

[[plugins]]
repo = 'haya14busa/is.vim'

[[plugins]]
repo = 'haya14busa/dein-command.vim'

# LightLine
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
" ステータスライン
set laststatus=2
set noshowmode

function L_eskk_get_mode()
    if (mode() == 'i') && eskk#is_enabled()
        return g:eskk#statusline_mode_strings[eskk#get_mode()]
    else
        return ''
    endif
endfunction

let g:lightline = {
\   'active': {
\     'left': [['mode', 'paste'], ['readonly', 'filename', 'eskk', 'modified'], ['radiru']],
\     'right': [['lineinfo'], ['percent'], ['suez', 'fileencoding', 'filetype']]
\   },
\   'component_function': {
\     'radiru': 'radiru#playing_station',
\     'eskk': 'L_eskk_get_mode',
\     'suez': 'suez#status',
\   },
\   'colorscheme': 'onedark',
\ }
'''

[[plugins]]
repo = 'mbbill/undotree'
hook_add = '''
nnoremap <leader>u :<C-u>UndotreeToggle<cr>
'''

[[plugins]]
repo = 'kato-k/radiru.vim'

[[plugins]]
repo = 'liuchengxu/vista.vim'
hook_add = '''
nnoremap <silent> <Leader>o :<C-u>Vista!!<CR>
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
let g:quickrun_config = get(g:, 'quickrun_config', {})
let g:quickrun_config._ = {
      \ 'outputter' : 'error',
      \ 'outputter/error/success' : 'buffer',
      \ 'outputter/error/error'   : 'quickfix',
      \ 'outputter/buffer/close_on_empty' : 1,
      \ 'runner' : 'terminal',
      \ }
'''

[[plugins]]
repo = 'tyru/eskk.vim'
hook_add = '''
if !filereadable(expand('~/.config/eskk/jisyo'))
    call system('mkdir -p ~/.config/eskk')
    call system('cd ~/.config/eskk/ && wget http://openlab.jp/skk/dic/SKK-JISYO.L.gz && gzip -d SKK-JISYO.L.gz && nkf -Ew SKK-JISYO.L > jisyo && rm -f SKK-JISYO.L')
endif
let g:eskk#directory = "~/.config/eskk"
let g:eskk#dictionary = { 'path': "~/.config/eskk/my_jisyo", 'sorted': 1, 'encoding': 'utf-8',}
let g:eskk#large_dictionary = {'path': "~/.config/eskk/jisyo", 'sorted': 1, 'encoding': 'utf-8',}
let g:eskk#enable_completion = 0
'''


[[plugins]]
repo = 'mattn/ctrlp-matchfuzzy'

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
hook_add = '''
let g:ctrlp_match_func = {'match': 'ctrlp_matchfuzzy#matcher'}
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git'
'''

[[plugins]]
repo = 'kato-k/hiroyuki.vim'

[[plugins]]
repo = 'thinca/vim-localrc'

[[plugins]]
repo = 'skanehira/translate.vim'
hook_add = '''
nnoremap <leader>t :Translate<CR>
vnoremap <leader>t :Translate<CR>
'''

[[plugins]]
repo = 'itchyny/vim-winfix'

[[plugins]]
repo = 'twitvim/twitvim'

[[plugins]]
repo = 'rhysd/clever-f.vim'
hook_add = '''
map ; <Plug>(clever-f-repeat-forward)
map , <Plug>(clever-f-repeat-back)
'''
