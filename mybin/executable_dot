#!/usr/bin/env -S deno run -A --ext ts
import Dfm from "https://deno.land/x/dfm@v0.11/mod.ts";
import { Shell, Repository, Symlink } from "https://deno.land/x/dfm@v0.11/plugin/mod.ts";
import { os } from "https://deno.land/x/dfm@v0.11/util/mod.ts";
import { fromFileUrl } from "https://deno.land/std@0.149.0/path/mod.ts";

const dfm = new Dfm({
  dotfilesDir: "~/.local/share/chezmoi/old",
  dfmFilePath: fromFileUrl(import.meta.url),
});

const links: [string, string][] = []
//   ["zshrc", "~/.zshrc"],
//   ["tmux.conf", "~/.tmux.conf"],
//   ["gitconfig", "~/.gitconfig"],
//
//   ["vimrc", "~/.vimrc"],
//   ["vim", "~/.vim"],
//
//   ["config/alacritty", "~/.config/alacritty"],
//   ["config/nvim", "~/.config/nvim"],
//   ["config/hypr", "~/.config/hypr"]
// ];

// if (os() == "linux") {
  // links = links.concat([
    // ["config/libskk", "~/.config/libskk"],
    // ["config/sway", "~/.config/sway"],
    // ["bin/swayon", "/usr/local/bin/swayon"]
    // ["config/waybar", "~/.config/waybar"],
 //  ])
// }

const cmds: string[] = [];

let path: string[] = [
  "~/.deno/bin",
  "~/.cargo/env",
  "~/.cargo/bin",
  "~/mybin",
  "~/.bun/bin",
  "/opt/nvim-linux64/bin"
];

if (os() == "darwin") {
  path = path.concat([

    "/usr/local/opt/ruby/bin",
    // Mac標準のコマンドを書き換える
    "/usr/local/opt/bison/bin"

  ])

} else if (os() == "linux") {
  path = path.concat([
    "~/dotfiles/bin",
    "~/dotfiles/bin/sway",
    "~/.local/share/gem/ruby/3.0.0/bin",
    "/home/kat0h/.local/share/gem/ruby/3.0.0/bin",
    "/home/kat0h/.platformio/penv/bin",
  ])
}


dfm.use(
  new Symlink(dfm, links),
  new Shell({
    env_path: "~/.cache/env",
    cmds: cmds,
    path: path
  }),
  new Repository(dfm),
);
dfm.end();
// vim:filetype=typescript
